<?xml version="1.0"?>
<robot xmlns:xacro="http://ros.org/wiki/xacro">

  <xacro:macro name="rgb_camera" params="camera_name parent_link *box *origin">
    <link name="${camera_name}">
      <collision>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <geometry>
          <xacro:insert_block name="box"/>
        </geometry>
      </collision>

      <visual>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <geometry>
          <xacro:insert_block name="box"/>
        </geometry>
      </visual>

      <!-- <inertial>
        <mass value="0.01" />
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <inertia ixx="5.3e-8" ixy="0" ixz="0" iyy="6.7e-9" iyz="0" izz="6.7e-9" />
      </inertial> -->
    </link>

    <joint name="${camera_name}_joint" type="fixed">
      <axis xyz="1 0 0" />
      <xacro:insert_block name="origin"/>
      <parent link="${parent_link}"/>
      <child link="${camera_name}"/>
    </joint>

    <gazebo reference="${camera_name}">
      <sensor type="camera" name="${camera_name}">
        <update_rate>30.0</update_rate>
        <camera name="${camera_name}">
          <horizontal_fov>1.3962634</horizontal_fov>
          <image>
            <width>800</width>
            <height>800</height>
            <format>R8G8B8</format>
          </image>
          <clip>
            <near>0.02</near>
            <far>300</far>
          </clip>
          <noise>
            <type>gaussian</type>
            <mean>0.0</mean>
            <stddev>0.007</stddev>
          </noise>
        </camera>
        <plugin name="rgb_camera_controller" filename="libgazebo_ros_camera.so">
          <alwaysOn>true</alwaysOn>
          <updateRate>0.0</updateRate>
          <cameraName>${camera_name}</cameraName>
          <imageTopicName>image_raw</imageTopicName>
          <cameraInfoTopicName>camera_info</cameraInfoTopicName>
          <frameName>${camera_name}</frameName>
          <hackBaseline>0.07</hackBaseline>
          <distortionK1>0.0</distortionK1>
          <distortionK2>0.0</distortionK2>
          <distortionK3>0.0</distortionK3>
          <distortionT1>0.0</distortionT1>
          <distortionT2>0.0</distortionT2>
        </plugin>
      </sensor>
      <material>Gazebo/Gray</material>
    </gazebo>
  </xacro:macro>

  <xacro:macro name="depth_camera" params="camera_name parent_link *box *origin">
    <link name="${camera_name}">
      <collision>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <geometry>
          <xacro:insert_block name="box"/>
        </geometry>
      </collision>

      <visual>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <geometry>
          <xacro:insert_block name="box"/>
        </geometry>
      </visual>

      <!-- <inertial>
        <mass value="0.05" />
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <inertia ixx="2.7e-5" ixy="0" ixz="0" iyy="4.2e-7" iyz="0" izz="2.67e-5" />
      </inertial> -->
    </link>

    <joint name="${camera_name}_joint" type="fixed">
      <axis xyz="1 0 0" />
      <xacro:insert_block name="origin"/>
      <parent link="${parent_link}"/>
      <child link="${camera_name}"/>
    </joint>

    <link name="camera_depth_link"></link>
    <joint name="camera_depth_correction_joint" type="fixed">
      <origin xyz="0 0 0" rpy="-${pi/2} 0 -${pi/2} "/>
      <parent link="${camera_name}"/>
      <child link="camera_depth_link"/>
    </joint>
    <!-- Additional transformation link needed due to frame convention mismatch between gazebo and kinect in rviz
    https://answers.ros.org/question/218395/libgazebo_ros_openni_kinectso-depth-pointcloud-wrong-tf/ -->

    <gazebo reference="${camera_name}">
      <sensor name="${camera_name}_camera" type="depth">
        <update_rate>20</update_rate>
        <camera>
          <horizontal_fov>1.047198</horizontal_fov>
          <image>
            <width>640</width>
            <height>480</height>
            <format>R8G8B8</format>
          </image>
          <clip>
            <near>0.001</near>
            <far>3</far>
          </clip>
        </camera>
        <plugin name="depth_camera_controller" filename="libgazebo_ros_openni_kinect.so">
          <baseline>0.2</baseline>
          <alwaysOn>true</alwaysOn>
          <updateRate>1.0</updateRate>
          <cameraName>${camera_name}_ir</cameraName>
          <imageTopicName>/${camera_name}/depth/image_raw</imageTopicName>
          <cameraInfoTopicName>/${camera_name}/depth/camera_info</cameraInfoTopicName>
          <depthImageTopicName>/${camera_name}/depth/image_raw</depthImageTopicName>
          <depthImageInfoTopicName>/${camera_name}/depth/camera_info</depthImageInfoTopicName>
          <pointCloudTopicName>/${camera_name}/depth/points</pointCloudTopicName>
          <frameName>camera_depth_link</frameName>
          <pointCloudCutoff>0.001</pointCloudCutoff>
          <pointCloudCutoffMax>3.0</pointCloudCutoffMax>
          <distortionK1>0.00000001</distortionK1>
          <distortionK2>0.00000001</distortionK2>
          <distortionK3>0.00000001</distortionK3>
          <distortionT1>0.00000001</distortionT1>
          <distortionT2>0.00000001</distortionT2>
          <CxPrime>0</CxPrime>
          <Cx>0</Cx>
          <Cy>0</Cy>
          <focalLength>0</focalLength>
          <hackBaseline>0</hackBaseline>
        </plugin>
      </sensor>
    </gazebo>
  </xacro:macro>

  <xacro:macro name="imu" params="imu_name parent_link *box *origin">
    <link name="${imu_name}">
      <!--       <collision>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <geometry>
          <xacro:insert_block name="box"/>
        </geometry>
      </collision> -->

      <visual>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <geometry>
          <xacro:insert_block name="box"/>
        </geometry>
      </visual>

      <!--       <inertial>
        <mass value="0.01" />
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <inertia ixx="5.3e-8" ixy="0" ixz="0" iyy="6.7e-9" iyz="0" izz="6.7e-9" />
      </inertial> -->
    </link>

    <joint name="${imu_name}_joint" type="fixed">
      <axis xyz="0 0 1" />
      <xacro:insert_block name="origin"/>
      <parent link="${parent_link}"/>
      <child link="${imu_name}"/>
    </joint>

    <gazebo reference="${imu_name}">
      <gravity>true</gravity>
      <sensor name="${imu_name}" type="imu">
        <always_on>true</always_on>
        <update_rate>100</update_rate>
        <visualize>true</visualize>
        <topic>__default_topic__</topic>
        <plugin filename="libgazebo_ros_imu_sensor.so" name="imu_controller">
          <topicName>${imu_name}</topicName>
          <bodyName>${imu_name}_link</bodyName>
          <updateRateHZ>30.0</updateRateHZ>
          <gaussianNoise>0.0</gaussianNoise>
          <xyzOffset>0 0 0</xyzOffset>
          <rpyOffset>0 0 0</rpyOffset>
          <frameName>${imu_name}</frameName>
        </plugin>
        <pose>0 0 0 0 0 0</pose>
      </sensor>
    </gazebo>
  </xacro:macro>

  <xacro:macro name="laser_scanner" params="laser_name parent_link *cylinder *origin">
    <link name="${laser_name}">
      <collision>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <geometry>
          <xacro:insert_block name="cylinder"/>
        </geometry>
      </collision>

      <visual>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <geometry>
          <xacro:insert_block name="cylinder"/>
        </geometry>
      </visual>

      <!--       <inertial>
        <mass value="0.01" />
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <inertia ixx="5.3e-8" ixy="0" ixz="0" iyy="6.7e-9" iyz="0" izz="6.7e-9" />
      </inertial> -->
    </link>

    <joint name="${laser_name}_joint" type="fixed">
      <axis xyz="0 0 1" />
      <xacro:insert_block name="origin"/>
      <parent link="${parent_link}"/>
      <child link="${laser_name}"/>
    </joint>

    <gazebo reference="${laser_name}">
      <sensor type="ray" name="${laser_name}">
        <pose>0 0 0 0 0 0</pose>
        <visualize>true</visualize>
        <update_rate>40</update_rate>
        <ray>
          <scan>
            <horizontal>
              <samples>720</samples>
              <resolution>1</resolution>
              <min_angle>-1.570796</min_angle>
              <max_angle>1.570796</max_angle>
            </horizontal>
          </scan>
          <range>
            <min>0.10</min>
            <max>30.0</max>
            <resolution>0.01</resolution>
          </range>
          <noise>
            <type>gaussian</type>
            <!-- Noise parameters based on published spec for Hokuyo laser
                achieving "+-30mm" accuracy at range < 10m.  A mean of 0.0m and
                stddev of 0.01m will put 99.7% of samples within 0.03m of the true
                reading. -->
            <mean>0.0</mean>
            <stddev>0.01</stddev>
          </noise>
        </ray>
        <plugin name="laser_scanner_controller" filename="libgazebo_ros_laser.so">
          <topicName>${laser_name}/laser/scan</topicName>
          <frameName>${laser_name}</frameName>
        </plugin>
      </sensor>
    </gazebo>
  </xacro:macro>

</robot>